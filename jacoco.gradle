apply plugin: 'jacoco'

jacoco {
  toolVersion = '0.8.1'
}

tasks.withType(Test) {
  jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport,
    dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

  reports {
    xml.enabled = true
    html.enabled = true
  }

  def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*$[0-9].*']
  def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
  def mainSrc = "$project.projectDir/src/main/java"

  sourceDirectories = files([mainSrc])
  classDirectories = files([debugTree])
  executionData = fileTree(dir: project.buildDir,
      includes: ['jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'])
}

android {
  buildTypes {
    debug {
      testCoverageEnabled true
    }
  }
  testOptions {
    execution 'ANDROID_TEST_ORCHESTRATOR'
    animationsDisabled true

    unitTests {
      includeAndroidResources = true
    }
  }
}
