import static Versions.kotlinVersion

buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'
        classpath 'com.google.gms:google-services:4.3.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.3.0'
        classpath 'com.google.firebase:perf-plugin:1.3.3'
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.33.0'
    id 'com.diffplug.spotless' version '5.7.0'
    id 'io.gitlab.arturbosch.detekt' version '1.14.2'
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
}

subprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }

    apply from: rootProject.file('detekt.gradle')
    apply plugin: 'com.diffplug.spotless'

    spotless {
        kotlin {
            target '**/*.kt'
            ktlint()
            trimTrailingWhitespace()
            indentWithSpaces()
            endWithNewline()
        }
        kotlinGradle {
            target '*.gradle.kts'
            indentWithSpaces()
            trimTrailingWhitespace()
            endWithNewline()
            ktlint()
        }
        format 'xml', {
            target '**/*.xml'
            indentWithSpaces()
            trimTrailingWhitespace()
            endWithNewline()
        }
    }
}

task mockitoExtensions {
    doFirst {
        rootProject.subprojects.each {
            def path = "${it.projectDir}/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker"
            def mockMakerFile = new File(path)
            mockMakerFile.parentFile.mkdirs()
            mockMakerFile.createNewFile()
            mockMakerFile.write("mock-maker-inline")
        }
    }
}

task('test').dependsOn mockitoExtensions
