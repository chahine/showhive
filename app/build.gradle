apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'
apply from: rootProject.file('module.gradle')

android {
    namespace 'com.chahine.showhive.app'
    compileSdkVersion Versions.compileSdkVersion

    defaultConfig {
        applicationId 'com.chahine.showhive'

        minSdkVersion Versions.minSdkVersion
        targetSdkVersion Versions.targetSdkVersion

        final def versionPropsFile = rootProject.file('version.properties')
        def buildNumber
        def version
        if (versionPropsFile.canRead()) {
            final Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            buildNumber = versionProps['BUILD_NUMBER'].toInteger()
            version = versionProps['VERSION']
        } else {
            buildNumber = 1
            version = 'local'
        }

        versionCode buildNumber
        versionName version

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            if (rootProject.file('debug.properties').exists()) {
                final def props = new Properties()
                props.load(new FileInputStream(rootProject.file('debug.properties')))

                storeFile file(props['DEBUG_STORE_FILE'])
                storePassword props['DEBUG_STORE_PASSWORD']
                keyAlias props['DEBUG_KEY_ALIAS']
                keyPassword props['DEBUG_KEY_PASSWORD']
            }
        }
        showhive {
            if (rootProject.file('release.properties').exists()) {
                final def props = new Properties()
                props.load(new FileInputStream(rootProject.file('release.properties')))

                storeFile file(props['RELEASE_STORE_FILE'])
                storePassword props['RELEASE_STORE_PASSWORD']
                keyAlias props['RELEASE_KEY_ALIAS']
                keyPassword props['RELEASE_KEY_PASSWORD']
                v2SigningEnabled true
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            FirebasePerformance.instrumentationEnabled false
        }
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true

            signingConfig signingConfigs.showhive

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation project(':base')

    Dependencies.featureProjects.each { implementation project("$it") }

    implementation Dependencies.paging

    kapt Dependencies.lifecycleCompiler
    kapt Dependencies.daggerCompiler

    // Firebase
    implementation platform(Dependencies.firebaseBom)
    implementation Dependencies.firebasePerf

    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
}
